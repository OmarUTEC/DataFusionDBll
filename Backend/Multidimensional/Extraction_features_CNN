'''
1. Leemos el csv con las libreria request y bytesIO
Descargamos las imágenes sin almacenarlas en el disco
2. Extracción de carácterísticas imágenes
3. Alamcenamos como vectores característicos
4. Guardamos en archivo binario: ID (int) + VECTOR(array flotante)

import requests
from io import BytesIO
from tensorflow.keras.applications import InceptionV3
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.inception_v3 import preprocess_input
import numpy as np
import pandas as pd
import struct
import gc  # Para liberar la memoria manualmente

# Cargar el modelo InceptionV3 preentrenado
modelo = InceptionV3(weights='imagenet', include_top=False, pooling='avg')

# Función para extraer características de la imagen y guardarlas en un archivo binario
def extrac_features_url(url, img_id, output_bin):
    try:
        # Descargar la imagen con requests
        response = requests.get(url, timeout=10)  
        if response.status_code == 200:
            # Cargar la imagen en un array de NumPy
            img = image.load_img(BytesIO(response.content), target_size=(299, 299))
            img_array = image.img_to_array(img)
            img_array = np.expand_dims(img_array, axis=0)
            img_array = preprocess_input(img_array)

            # Extraer el vector de características con InceptionV3
            features = modelo.predict(img_array).flatten()

            # Guardar el ID y el vector de características en el archivo binario
            with open(output_bin, 'ab') as f:
                f.write(struct.pack(f'i2048f', img_id, *features))

            del img_array, features
            gc.collect()  

            print(f"Características extraídas y guardadas para la imagen ID {img_id}")
        else:
            print(f"Error al descargar la imagen ID {img_id}: Status code {response.status_code}")
    except Exception as e:
        print(f"Error al procesar la imagen ID {img_id}: {str(e)}")


def process_csv(file_path, output_bin):
    data = pd.read_csv(file_path)
    for idx, row in data.iterrows():
        url = row['link']  # Enlace de la imagen (columna 'link')
        try:
            extrac_features_url(url, idx, output_bin)
        except Exception as e:
            print(f"Error procesando la imagen {idx}: {str(e)}")

csv_file = 'images1.csv'  # Ruta del archivo CSV
output_bin = 'vectors.bin'  # Nombre del archivo binario de salida


process_csv(csv_file, output_bin)
print("Extracción de características completada.")


